Уважаемые разработчики! ТЗ в общем виде ниже. В комментарии прошу указывать срок выполнения.


Общее описание задачи:
1) Необходимо сделать рабочее место в котором оператор будет управлять списками водителей и транспорта.

Основные поля водителя:
- Фамилия
- Имя
- Отчество
- дата рождения
- Открытые категории
- Срок действия водительского удостоверения
- Номер водительского удостоверения
- Фото
- Номер (ID водителя) (трехзначное число, присваивается автоматически, последовательно, с шагом 1)
- Номер телефона
- Примечание
- Статус (занят/свободен)
- Привязка к автобусам(перечень ID транспорта)
- ID компании


Основные поля транспорта:
- Тип (машина, минивен, автобус)
- Марка
- Модель
- Комплектация (Кондиционер, TV)
- Кол-во мест
- Класс (А, В, С)
- Гос. Номер
- Номер (ID транспорта) (трехзначное число, присваивается автоматически, последовательно, с шагом 1)
- Привязка к водителям(перечень ID водителей)
- ID компании


Возможность ввода дополнительных полей (несколько номеров телефонов например)

2) Возможность связывать одного/несколько водителей с одной/несколькими машинами.

Что необходимо сделать:
1) Разработать схемы mongoosejs для mongodb
- Хранить историю изменений

2)Подготовить базовое приложение node.js + Express 4:
- обработка ошибок
- конфигурция приложения через nconf
- шаблонизатор ejs
- маршруты подключаются отдельными файлами
и другие функции которые могут потребоваться для работы рабочего места и системы

3) Подготовить модели для управления рабочим местом
Функции модели водителя:
- Добавление водителя
- Удаление водителя (закрытие версии)
- Обновление информации о водителе (обновление версии)
- Получение информации о водителе по id водителя
- Получение информации о водителях по id компании
и другие функции которые могут потребоваться для работы рабочего места и системы

Функции модели транспорта:
- Добавление транспорта
- Удаление транспорта (закрытие версии)
- Обновление информации о транспорте (обновление версии)
- Получение информации о транспорте по id водителя
- Получение информации о транспорте по id компании
и другие функции которые могут потребоваться для работы рабочего места и системы

4) Подготовить формы для управления водителями и транспортом
- Страницы должны взаимодействовать с контроллером через ajax
- Страницы так же должны быть оптимизированы для работы с планшетных устройств.
- Дизайн и верстка http://startbootstrap.com/template-overviews/sb-admin-2/

4.1.1) Страница с перечнем водителей
- кнопка : добавление нового водителя
- таблица с полями ID, ФИО, номер ВУ, Телефон (загружаем первые n строчек, остальные подгружаем после прокрутки экрана вниз)
- цвет строки меняется от статуса
- Сортировка водителей по фамилии/имени/отчеству


4.1.2) Страница отображения выбранного водителя
- кнопка: редактировать водителя
- кнопка: удалить водителя (с запросом подтверждения)

4.1.3) Форма добавления нового водителя/редактирования водителя

4.2.1) Страница с перечнем транспорта
- кнопка : добавление нового транспорта
- таблица с полями Марка, модель, класс, Гос. номер (загружаем первые n строчек, остальные подгружаем после прокрутки экрана вниз)
- Сортировка водителей по Марка-модель/Класс/Гос.номер


4.2.2) Страница отображения выбранного транспорта
- кнопка: редактировать транспорта
- кнопка: удалить транспорт (с запросом подтверждения)

4.3.3) Форма добавления нового транспорта/редактирования транспорта
